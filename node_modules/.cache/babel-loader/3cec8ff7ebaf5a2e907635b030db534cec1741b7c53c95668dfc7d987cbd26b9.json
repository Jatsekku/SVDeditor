{"ast":null,"code":"var _jsxFileName = \"/Users/kuba/Desktop/PROG/Projects/SVDeditor/src/components/TreeView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/TreeView.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeView = () => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    // Fetch tree nodes from backend\n    setNodes([{\n      id: 1,\n      name: 'Node 1'\n    }, {\n      id: 2,\n      name: 'Node 2'\n    }, {\n      id: 3,\n      name: 'Node 3'\n    }]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.treeView,\n    children: nodes.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.treeNode,\n      children: node.name\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n_s(TreeView, \"PbTFKmE3ANQd50N7lqnMXthrMF4=\");\n_c = TreeView;\nexport default TreeView;\nvar _c;\n$RefreshReg$(_c, \"TreeView\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TreeView","_s","nodes","setNodes","id","name","className","styles","treeView","children","map","node","treeNode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kuba/Desktop/PROG/Projects/SVDeditor/src/components/TreeView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../styles/TreeView.module.css'\n\nconst TreeView = () => {\n\tconst [nodes, setNodes] = useState([])\n\n\tuseEffect(() => {\n\t\t// Fetch tree nodes from backend\n\t\tsetNodes([\n\t\t\t{ id: 1, name: 'Node 1' },\n\t\t\t{ id: 2, name: 'Node 2' },\n\t\t\t{ id: 3, name: 'Node 3' },\n\t\t])\n\t}, [])\n\n\treturn (\n\t\t<div className={styles.treeView}>\n\t\t\t{nodes.map(node => (\n\t\t\t\t<div key={node.id} className={styles.treeNode}>\n\t\t\t\t\t{node.name}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default TreeView\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,+BAA+B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACf;IACAO,QAAQ,CAAC,CACR;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAS,CAAC,EACzB;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAS,CAAC,EACzB;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAS,CAAC,CACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACCN,OAAA;IAAKO,SAAS,EAAEC,MAAM,CAACC,QAAS;IAAAC,QAAA,EAC9BP,KAAK,CAACQ,GAAG,CAACC,IAAI,iBACdZ,OAAA;MAAmBO,SAAS,EAAEC,MAAM,CAACK,QAAS;MAAAH,QAAA,EAC5CE,IAAI,CAACN;IAAI,GADDM,IAAI,CAACP,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAAAf,EAAA,CArBKD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAuBd,eAAeA,QAAQ;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}